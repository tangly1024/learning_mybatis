<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.troy1024.mapper.UserMapper">




    <resultMap type="com.troy1024.bean.User" id="resultListUser">
        <id column="id" property="id"/>
        <result column="userName" property="userName"/>
    </resultMap>


    <select id="findUserById" resultType="com.troy1024.bean.User">
        select * from t_user where id = #{id}
    </select>

    <select id="findUsersByUserNames" parameterType="string" resultMap="resultListUser">
        select * from t_user where userName like #{userName}
    </select>


    <!--执行增加操作的SQL语句。id和parameterType
    分别与IUserOperation接口中的addUser方法的名字和
    参数类型一致。以#{name}的形式引用Student参数
    的name属性，MyBatis将使用反射读取Student参数
    的此属性。#{name}中name大小写敏感。引用其他
    的gender等属性与此一致。seGeneratedKeys设置
    为"true"表明要MyBatis获取由数据库自动生成的主
    键；keyProperty="id"指定把获取到的主键值注入
    到Student的id属性-->
    <insert id="addUser" parameterType="com.troy1024.bean.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(userName,note)
        values(#{userName},#{note})
    </insert>

    <update id="updateUser" parameterType="com.troy1024.bean.User" >
        update t_user set userName=#{userName},note=#{note} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from t_user where id=#{id}
    </delete>

</mapper>